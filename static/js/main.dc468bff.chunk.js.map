{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","components/Form/Form.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","Form","state","name","number","getContactData","e","setState","target","value","className","form","onSubmit","props","label","input","onInput","this","type","pattern","title","required","button","Component","Contact","item","onDelete","contactItem","onClick","id","ContactList","contactList","itemList","map","Filter","filterWrapper","filterLabel","htmlFor","App","contacts","filter","saveNewContact","preventDefault","some","alert","prevState","shortid","generate","currentTarget","reset","removeContact","contact","filterHandler","toLowerCase","trim","filterContacts","isNaN","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc468bff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__1fcsR\",\"filterLabel\":\"Filter_filterLabel__1WarF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemList\":\"ContactList_itemList__UDbhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__11Gsy\",\"label\":\"Form_label__svdKh\",\"input\":\"Form_input__2tf5L\",\"button\":\"Form_button__19puk\"};","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport { form, label, input, button } from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  getContactData = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className={form}\r\n        onSubmit={(e) =>\r\n          this.props.onSubmit(e, this.state.name, this.state.number)\r\n        }\r\n      >\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from \"prop-types\";\r\nimport { button, contactItem } from \"./Contact.module.css\";\r\n\r\nconst Contact = (props) => {\r\n  const { item, onDelete } = props;\r\n  return (\r\n    <li className={contactItem}>\r\n      <span>\r\n        {item.name}: {item.number}\r\n      </span>\r\n      <button\r\n        className={button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(item.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { itemList } from \"./ContactList.module.css\";\r\n\r\nconst ContactList = (props) => {\r\n  const { contactList, onDelete } = props;\r\n  return (\r\n    <ul className={itemList}>\r\n      {contactList.map((item) => {\r\n        return <Contact item={item} key={item.id} onDelete={onDelete} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport { filterWrapper, filterLabel } from \"./Filter.module.css\";\r\n\r\nconst Filter = (props) => {\r\n  const { onInput } = props;\r\n  return (\r\n    <div className={filterWrapper}>\r\n      <label className={filterLabel} htmlFor=\"filter\">\r\n        Find contacts by name or number\r\n      </label>\r\n      <input id=\"filter\" onInput={onInput} type=\"text\"></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"4591256\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"4438912\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"6451779\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"2279126\" },\n    ],\n    filter: \"\",\n  };\n\n  saveNewContact = (e, name, number) => {\n    e.preventDefault();\n\n    this.state.contacts.some((item) => item.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState((prevState) => {\n          return {\n            contacts: [\n              {\n                id: shortid.generate(),\n                name: name,\n                number: number,\n              },\n              ...prevState.contacts,\n            ],\n          };\n        });\n    e.currentTarget.reset();\n  };\n\n  removeContact = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== id),\n      };\n    });\n  };\n\n  filterHandler = (e) => {\n    const { value } = e.target;\n    this.setState({ filter: value.toLowerCase().trim() });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    return isNaN(filter)\n      ? contacts.filter((item) => item.name.toLowerCase().includes(filter))\n      : contacts.filter((item) => item.number.includes(filter));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.saveNewContact} />\n        <h2>Contacts</h2>\n        <Filter onInput={this.filterHandler} />\n        <ContactList\n          contactList={this.filterContacts()}\n          onDelete={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__2V0rx\",\"contactItem\":\"Contact_contactItem__OHLUz\"};"],"sourceRoot":""}